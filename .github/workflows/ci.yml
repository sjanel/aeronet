name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test:
    strategy:
      fail-fast: true
      matrix:
        compiler: [gcc-13, clang-21]
        features: [OFF, ON]
        build: [Debug, Release]
    runs-on: ubuntu-latest

    env:
      CMAKE_BUILD_TYPE: ${{ matrix.build }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Update apt cache
        run: sudo apt-get update -y

      - name: Install OpenSSL development headers (for TLS ON)
        run: sudo apt-get install -y libssl-dev || true

      - name: Install GCC toolchain
        if: ${{ startsWith(matrix.compiler, 'gcc') }}
        run: sudo apt-get install -y ${{ matrix.compiler }}

      - name: Install Clang/LLVM toolchain
        if: ${{ startsWith(matrix.compiler, 'clang') }}
        run: |
            wget --retry-connrefused --waitretry=5 --tries=5 https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            compiler="${{ matrix.compiler }}"
            version="${compiler##*-}"
            echo "Detected clang version: $version"
            sudo ./llvm.sh "$version"
            sudo apt-get install -y "clang-tidy-$version" "lld-$version"

      - name: Derive CC/CXX environment
        run: |
          compiler="${{ matrix.compiler }}"
          echo "CC=$compiler" >> $GITHUB_ENV
          ver="${compiler##*-}"
          if [[ "$compiler" == gcc-* ]]; then
            echo "CXX=g++-$ver" >> $GITHUB_ENV
          else
            echo "CXX=clang++-$ver" >> $GITHUB_ENV
          fi
          echo "Derived compilers: CC=$compiler CXX set for version $ver"

      - name: Show compiler version
        run: |
          $CXX --version

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            build
            ~/.cache/ccache
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('**/CMakeLists.txt','**/*.cmake') }}
          restore-keys: ${{ runner.os }}-${{ matrix.compiler }}-

      - name: Configure (CMake)
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
            -DAERONET_BUILD_TESTS=ON \
            -DAERONET_BUILD_EXAMPLES=ON \
            -DAERONET_ENABLE_ASAN=ON \
            ${{ startsWith(matrix.compiler, 'clang') && '-DAERONET_ENABLE_CLANG_TIDY=OFF' || '' }} \
            -DAERONET_ENABLE_SPDLOG=${{ matrix.features }} \
            -DAERONET_ENABLE_OPENSSL=${{ matrix.features }}

      - name: Build
        run: |
          cmake --build build --parallel

      - name: Run unit tests
        run: |
          ctest --test-dir build --output-on-failure --timeout 300 -j $(nproc)

      - name: Summary
        if: always()
        run: |
          echo "Compiler: $CXX" >> $GITHUB_STEP_SUMMARY
          echo "SPDLOG: ${{ matrix.features }}" >> $GITHUB_STEP_SUMMARY
          echo "OPENSSL: ${{ matrix.features }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit: $GITHUB_SHA" >> $GITHUB_STEP_SUMMARY
          echo "Tests executed:" >> $GITHUB_STEP_SUMMARY
          ctest --test-dir build -N | sed 's/^/  /' >> $GITHUB_STEP_SUMMARY

      - name: Install artifact (optional)
        if: always()
        run: |
          cmake --install build --prefix install || true

      - name: Upload install dir artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          # NOTE: Artifact names must be globally unique within a single workflow run.
          # The previous name omitted the build type, so Debug and Release matrix legs
          # attempted to create the same artifact name, yielding HTTP 409 Conflict.
          # Adding the build axis (and keeping compiler + features toggle) makes each
          # matrix combination distinct. If you ever re-run a failed job (run_attempt > 1)
          # and want full uniqueness across attempts, you could append `-ra${{ github.run_attempt }}`.
          name: aeronet-${{ matrix.compiler }}-features-${{ matrix.features }}-build-${{ matrix.build }}
          path: install
          if-no-files-found: ignore
          retention-days: 7
